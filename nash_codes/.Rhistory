library(gridExtra)
library(rstan)
library(bayesplot)
library(loo)
library(VGAM)
library(evd)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
datadir = file.path('..', 'data', 'Data_GHCN_Daily', 'extracted_csv')
filenames = list.files(datadir)
dfpos = read.csv(file.path(datadir, '..',  'list_ushcn_stats.csv'))
# dflen = read.csv(file.path('..', 'nash_output', 'length_file.csv'),sep = '\t')
# mylen = subset(dflen, dflen$)
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
dfpos$STATE = trim(dfpos$STATE)
dfpos$NAME = trim(dfpos$NAME)
# dflakes <- subset(dfpos, dfpos$LATITUDE > 45 & dfpos$LONGITUDE > -94)
dflakes <- subset(dfpos, dfpos$STATE == 'MN')
dfgeorgia <- subset(dfpos, dfpos$STATE == 'GA')
# dften <- subset(dfpos, dfpos$STATE == 'TN')
outplot1 = file.path('..', 'nash_output_figures')
outplot = file.path(outplot1, 'stats_figures')
dir.create(outplot, showWarnings = FALSE)
# outdata = file.path('..', 'nash_output', 'outdata')
# dir.create(outdata, showWarnings = FALSE)
source("nashfun.R")    # main functions for data analysis
#######################  parameters to set for MCMC  ###########################
Nt = 92 # (30 + 31 + 31 expected observations)
cores = 4 # let us try to set this for both PC and cluster
min_num_years = 20 # if less skip station (years with enough data & overlap with NASH data)
maxmiss_per_season = 4 # remove all years with more than 4 events /season missing
thresh = 1 # for ordinary events
iter = 2000
chains = 4
ndraws = iter*chains/2
# station_id = 'USW00094728' # NEW YORK CENTRAL PARK
# station_id = 'USC00044232' # CALIFORNIA
# station_id = 'USC00218419' # Minnesota, Two Harbors
# station_id = 'USC00311677' # NORTH CAROLINA, CHAPEL HILL
# station_id = 'USC00478027' # WISCONSIN, SPOONER
# station_id = 'USC00475516' # WISCONSIN, MINOQUA
# station_id = 'USC00207812' # MICHIGAN, STAMBAUGH
# station_id = 'USC00409502' # TENNESSEE, WAYNESBORO
# station_id = 'USC00093621' # Georgia, Gainesville
# station_id = "USC00229079" # stat with larger decrease in maxima going NW (MS)
# station_id = "USC00221962" # stat with second larger decrease in maxima going NW
# station_id = "USC00478110" # stat with larger INCREASE in maxima going NW (WI)
# station_id = "USC00041048" # stat with second larger INCREASE in maxima going NW ( BRAWLEY CA)
# station_id = "USC00475808" # stat with  -a- larger INCREASE in maxima going NW
################################################################################
#######################comment for running all the stations at once #########
STATID = c(
'USW00094728',
'USC00044232',
'USC00218419',
'USC00311677',
'USC00478027',
'USC00475516',
'USC00207812',
'USC00409502',
'USC00093621',
"USC00229079",
"USC00221962",
"USC00041048",
"USC00478110", # outlier in Wisconsin
"USC00311677", # CHAPEL HILL, NC
"USC00475808")
NSTATS = length(STATID)
for (iii in 1:NSTATS){
station_id = STATID[iii]
################################################################################
# station_state = substr(dfpos$STATE[dfpos$ID==station_id], 1, 2)
print( sprintf('reading the data for station %s', iii))
station_state = dfpos$STATE[dfpos$ID==station_id]
station_name = dfpos$NAME[dfpos$ID==station_id]
# ddx = subset(dfpos,dfpos$ID==station_id)
# read precipitation and nash data
filepath = file.path(datadir, sprintf('%s.csv', station_id))
df <- read_summer_data(filepath, nmaxmiss = maxmiss_per_season, Nt_JJA = Nt)
prcp_years = unique(df$YEAR)
dfnash <- read_nash_values(prcp_years = prcp_years)
xnn = dfnash$XNN
ynn = dfnash$YNN
dfnash$resquad = ridgepos(xnn=xnn, ynn=ynn) # compute quadrants
# compute annual maxima statistics
print( sprintf('compute and plot annual maxima statistics for station %s', iii))
res = table_max(df, Nt=Nt, thresh = thresh)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
}
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
source("nashfun.R")    # main functions for data analysis
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
# RIDGE position to simulate data from:
# exploratory analysis of NASH data
rm(list=ls())
library(reshape2)
library(nleqslv)
library(extraDistr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(rstan)
library(bayesplot)
library(loo)
library(VGAM)
library(evd)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
datadir = file.path('..', 'data', 'Data_GHCN_Daily', 'extracted_csv')
filenames = list.files(datadir)
dfpos = read.csv(file.path(datadir, '..',  'list_ushcn_stats.csv'))
# dflen = read.csv(file.path('..', 'nash_output', 'length_file.csv'),sep = '\t')
# mylen = subset(dflen, dflen$)
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
dfpos$STATE = trim(dfpos$STATE)
dfpos$NAME = trim(dfpos$NAME)
# dflakes <- subset(dfpos, dfpos$LATITUDE > 45 & dfpos$LONGITUDE > -94)
dflakes <- subset(dfpos, dfpos$STATE == 'MN')
dfgeorgia <- subset(dfpos, dfpos$STATE == 'GA')
# dften <- subset(dfpos, dfpos$STATE == 'TN')
outplot1 = file.path('..', 'nash_output_figures')
outplot = file.path(outplot1, 'stats_figures')
dir.create(outplot, showWarnings = FALSE)
# outdata = file.path('..', 'nash_output', 'outdata')
# dir.create(outdata, showWarnings = FALSE)
source("nashfun.R")    # main functions for data analysis
#######################  parameters to set for MCMC  ###########################
Nt = 92 # (30 + 31 + 31 expected observations)
cores = 4 # let us try to set this for both PC and cluster
min_num_years = 20 # if less skip station (years with enough data & overlap with NASH data)
maxmiss_per_season = 4 # remove all years with more than 4 events /season missing
thresh = 1 # for ordinary events
iter = 2000
chains = 4
ndraws = iter*chains/2
STATID = c(
'USW00094728',
'USC00044232',
'USC00218419',
'USC00311677',
'USC00478027',
'USC00475516',
'USC00207812',
'USC00409502',
'USC00093621',
"USC00229079",
"USC00221962",
"USC00041048",
"USC00478110", # outlier in Wisconsin
"USC00311677", # CHAPEL HILL, NC
"USC00475808")
NSTATS = length(STATID)
iii = 1
station_id = STATID[iii]
print( sprintf('reading the data for station %s', iii))
station_state = dfpos$STATE[dfpos$ID==station_id]
station_name = dfpos$NAME[dfpos$ID==station_id]
filepath = file.path(datadir, sprintf('%s.csv', station_id))
df <- read_summer_data(filepath, nmaxmiss = maxmiss_per_season, Nt_JJA = Nt)
prcp_years = unique(df$YEAR)
dfnash <- read_nash_values(prcp_years = prcp_years)
xnn = dfnash$XNN
ynn = dfnash$YNN
dfnash$resquad = ridgepos(xnn=xnn, ynn=ynn) # compute quadrants
print( sprintf('compute and plot annual maxima statistics for station %s', iii))
res = table_max(df, Nt=Nt, thresh = thresh)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
# exploratory analysis of NASH data
rm(list=ls())
library(reshape2)
library(nleqslv)
library(extraDistr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(rstan)
library(bayesplot)
library(loo)
library(VGAM)
library(evd)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
datadir = file.path('..', 'data', 'Data_GHCN_Daily', 'extracted_csv')
filenames = list.files(datadir)
dfpos = read.csv(file.path(datadir, '..',  'list_ushcn_stats.csv'))
# dflen = read.csv(file.path('..', 'nash_output', 'length_file.csv'),sep = '\t')
# mylen = subset(dflen, dflen$)
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
dfpos$STATE = trim(dfpos$STATE)
dfpos$NAME = trim(dfpos$NAME)
# dflakes <- subset(dfpos, dfpos$LATITUDE > 45 & dfpos$LONGITUDE > -94)
dflakes <- subset(dfpos, dfpos$STATE == 'MN')
dfgeorgia <- subset(dfpos, dfpos$STATE == 'GA')
# dften <- subset(dfpos, dfpos$STATE == 'TN')
outplot1 = file.path('..', 'nash_output_figures')
outplot = file.path(outplot1, 'stats_figures')
dir.create(outplot, showWarnings = FALSE)
# outdata = file.path('..', 'nash_output', 'outdata')
# dir.create(outdata, showWarnings = FALSE)
source("nashfun.R")    # main functions for data analysis
#######################  parameters to set for MCMC  ###########################
Nt = 92 # (30 + 31 + 31 expected observations)
cores = 4 # let us try to set this for both PC and cluster
min_num_years = 20 # if less skip station (years with enough data & overlap with NASH data)
maxmiss_per_season = 4 # remove all years with more than 4 events /season missing
thresh = 1 # for ordinary events
iter = 2000
chains = 4
ndraws = iter*chains/2
# station_id = 'USW00094728' # NEW YORK CENTRAL PARK
# station_id = 'USC00044232' # CALIFORNIA
# station_id = 'USC00218419' # Minnesota, Two Harbors
# station_id = 'USC00311677' # NORTH CAROLINA, CHAPEL HILL
# station_id = 'USC00478027' # WISCONSIN, SPOONER
# station_id = 'USC00475516' # WISCONSIN, MINOQUA
# station_id = 'USC00207812' # MICHIGAN, STAMBAUGH
# station_id = 'USC00409502' # TENNESSEE, WAYNESBORO
# station_id = 'USC00093621' # Georgia, Gainesville
# station_id = "USC00229079" # stat with larger decrease in maxima going NW (MS)
# station_id = "USC00221962" # stat with second larger decrease in maxima going NW
# station_id = "USC00478110" # stat with larger INCREASE in maxima going NW (WI)
# station_id = "USC00041048" # stat with second larger INCREASE in maxima going NW ( BRAWLEY CA)
# station_id = "USC00475808" # stat with  -a- larger INCREASE in maxima going NW
################################################################################
#######################comment for running all the stations at once #########
STATID = c(
'USW00094728',
'USC00044232',
'USC00218419',
'USC00311677',
'USC00478027',
'USC00475516',
'USC00207812',
'USC00409502',
'USC00093621',
"USC00229079",
"USC00221962",
"USC00041048",
"USC00478110", # outlier in Wisconsin
"USC00311677", # CHAPEL HILL, NC
"USC00475808")
NSTATS = length(STATID)
for (iii in 1:NSTATS){
station_id = STATID[iii]
################################################################################
# station_state = substr(dfpos$STATE[dfpos$ID==station_id], 1, 2)
print( sprintf('reading the data for station %s', iii))
station_state = dfpos$STATE[dfpos$ID==station_id]
station_name = dfpos$NAME[dfpos$ID==station_id]
# ddx = subset(dfpos,dfpos$ID==station_id)
# read precipitation and nash data
filepath = file.path(datadir, sprintf('%s.csv', station_id))
df <- read_summer_data(filepath, nmaxmiss = maxmiss_per_season, Nt_JJA = Nt)
prcp_years = unique(df$YEAR)
dfnash <- read_nash_values(prcp_years = prcp_years)
xnn = dfnash$XNN
ynn = dfnash$YNN
dfnash$resquad = ridgepos(xnn=xnn, ynn=ynn) # compute quadrants
# compute annual maxima statistics
print( sprintf('compute and plot annual maxima statistics for station %s', iii))
res = table_max(df, Nt=Nt, thresh = thresh)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
}
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
# exploratory analysis of NASH data
rm(list=ls())
library(reshape2)
library(nleqslv)
library(extraDistr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(rstan)
library(bayesplot)
library(loo)
library(VGAM)
library(evd)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
datadir = file.path('..', 'data', 'Data_GHCN_Daily', 'extracted_csv')
filenames = list.files(datadir)
dfpos = read.csv(file.path(datadir, '..',  'list_ushcn_stats.csv'))
# dflen = read.csv(file.path('..', 'nash_output', 'length_file.csv'),sep = '\t')
# mylen = subset(dflen, dflen$)
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
dfpos$STATE = trim(dfpos$STATE)
dfpos$NAME = trim(dfpos$NAME)
# dflakes <- subset(dfpos, dfpos$LATITUDE > 45 & dfpos$LONGITUDE > -94)
dflakes <- subset(dfpos, dfpos$STATE == 'MN')
dfgeorgia <- subset(dfpos, dfpos$STATE == 'GA')
# dften <- subset(dfpos, dfpos$STATE == 'TN')
outplot1 = file.path('..', 'nash_output_figures')
outplot = file.path(outplot1, 'stats_figures')
dir.create(outplot, showWarnings = FALSE)
# outdata = file.path('..', 'nash_output', 'outdata')
# dir.create(outdata, showWarnings = FALSE)
source("nashfun.R")    # main functions for data analysis
#######################  parameters to set for MCMC  ###########################
Nt = 92 # (30 + 31 + 31 expected observations)
cores = 4 # let us try to set this for both PC and cluster
min_num_years = 20 # if less skip station (years with enough data & overlap with NASH data)
maxmiss_per_season = 4 # remove all years with more than 4 events /season missing
thresh = 1 # for ordinary events
iter = 2000
chains = 4
ndraws = iter*chains/2
# station_id = 'USW00094728' # NEW YORK CENTRAL PARK
# station_id = 'USC00044232' # CALIFORNIA
# station_id = 'USC00218419' # Minnesota, Two Harbors
# station_id = 'USC00311677' # NORTH CAROLINA, CHAPEL HILL
# station_id = 'USC00478027' # WISCONSIN, SPOONER
# station_id = 'USC00475516' # WISCONSIN, MINOQUA
# station_id = 'USC00207812' # MICHIGAN, STAMBAUGH
# station_id = 'USC00409502' # TENNESSEE, WAYNESBORO
# station_id = 'USC00093621' # Georgia, Gainesville
# station_id = "USC00229079" # stat with larger decrease in maxima going NW (MS)
# station_id = "USC00221962" # stat with second larger decrease in maxima going NW
# station_id = "USC00478110" # stat with larger INCREASE in maxima going NW (WI)
# station_id = "USC00041048" # stat with second larger INCREASE in maxima going NW ( BRAWLEY CA)
# station_id = "USC00475808" # stat with  -a- larger INCREASE in maxima going NW
################################################################################
#######################comment for running all the stations at once #########
STATID = c(
'USW00094728',
'USC00044232',
'USC00218419',
'USC00311677',
'USC00478027',
'USC00475516',
'USC00207812',
'USC00409502',
'USC00093621',
"USC00229079",
"USC00221962",
"USC00041048",
"USC00478110", # outlier in Wisconsin
"USC00311677", # CHAPEL HILL, NC
"USC00475808")
NSTATS = length(STATID)
for (iii in 1:NSTATS){
station_id = STATID[iii]
################################################################################
# station_state = substr(dfpos$STATE[dfpos$ID==station_id], 1, 2)
print( sprintf('reading the data for station %s', iii))
station_state = dfpos$STATE[dfpos$ID==station_id]
station_name = dfpos$NAME[dfpos$ID==station_id]
# ddx = subset(dfpos,dfpos$ID==station_id)
# read precipitation and nash data
filepath = file.path(datadir, sprintf('%s.csv', station_id))
df <- read_summer_data(filepath, nmaxmiss = maxmiss_per_season, Nt_JJA = Nt)
prcp_years = unique(df$YEAR)
dfnash <- read_nash_values(prcp_years = prcp_years)
xnn = dfnash$XNN
ynn = dfnash$YNN
dfnash$resquad = ridgepos(xnn=xnn, ynn=ynn) # compute quadrants
# compute annual maxima statistics
print( sprintf('compute and plot annual maxima statistics for station %s', iii))
res = table_max(df, Nt=Nt, thresh = thresh)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
}
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
# exploratory analysis of NASH data
rm(list=ls())
library(reshape2)
library(nleqslv)
library(extraDistr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
library(rstan)
library(bayesplot)
library(loo)
library(VGAM)
library(evd)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
datadir = file.path('..', 'data', 'Data_GHCN_Daily', 'extracted_csv')
filenames = list.files(datadir)
dfpos = read.csv(file.path(datadir, '..',  'list_ushcn_stats.csv'))
# dflen = read.csv(file.path('..', 'nash_output', 'length_file.csv'),sep = '\t')
# mylen = subset(dflen, dflen$)
# returns string w/o leading or trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
dfpos$STATE = trim(dfpos$STATE)
dfpos$NAME = trim(dfpos$NAME)
# dflakes <- subset(dfpos, dfpos$LATITUDE > 45 & dfpos$LONGITUDE > -94)
dflakes <- subset(dfpos, dfpos$STATE == 'MN')
dfgeorgia <- subset(dfpos, dfpos$STATE == 'GA')
# dften <- subset(dfpos, dfpos$STATE == 'TN')
outplot1 = file.path('..', 'nash_output_figures')
outplot = file.path(outplot1, 'stats_figures')
dir.create(outplot, showWarnings = FALSE)
# outdata = file.path('..', 'nash_output', 'outdata')
# dir.create(outdata, showWarnings = FALSE)
source("nashfun.R")    # main functions for data analysis
#######################  parameters to set for MCMC  ###########################
Nt = 92 # (30 + 31 + 31 expected observations)
cores = 4 # let us try to set this for both PC and cluster
min_num_years = 20 # if less skip station (years with enough data & overlap with NASH data)
maxmiss_per_season = 4 # remove all years with more than 4 events /season missing
thresh = 1 # for ordinary events
iter = 2000
chains = 4
ndraws = iter*chains/2
# station_id = 'USW00094728' # NEW YORK CENTRAL PARK
# station_id = 'USC00044232' # CALIFORNIA
# station_id = 'USC00218419' # Minnesota, Two Harbors
# station_id = 'USC00311677' # NORTH CAROLINA, CHAPEL HILL
# station_id = 'USC00478027' # WISCONSIN, SPOONER
# station_id = 'USC00475516' # WISCONSIN, MINOQUA
# station_id = 'USC00207812' # MICHIGAN, STAMBAUGH
# station_id = 'USC00409502' # TENNESSEE, WAYNESBORO
# station_id = 'USC00093621' # Georgia, Gainesville
# station_id = "USC00229079" # stat with larger decrease in maxima going NW (MS)
# station_id = "USC00221962" # stat with second larger decrease in maxima going NW
# station_id = "USC00478110" # stat with larger INCREASE in maxima going NW (WI)
# station_id = "USC00041048" # stat with second larger INCREASE in maxima going NW ( BRAWLEY CA)
# station_id = "USC00475808" # stat with  -a- larger INCREASE in maxima going NW
################################################################################
#######################comment for running all the stations at once #########
STATID = c(
'USW00094728',
'USC00044232',
'USC00218419',
'USC00311677',
'USC00478027',
'USC00475516',
'USC00207812',
'USC00409502',
'USC00093621',
"USC00229079",
"USC00221962",
"USC00041048",
"USC00478110", # outlier in Wisconsin
"USC00311677", # CHAPEL HILL, NC
"USC00475808")
NSTATS = length(STATID)
for (iii in 1:NSTATS){
station_id = STATID[iii]
################################################################################
# station_state = substr(dfpos$STATE[dfpos$ID==station_id], 1, 2)
print( sprintf('reading the data for station %s', iii))
station_state = dfpos$STATE[dfpos$ID==station_id]
station_name = dfpos$NAME[dfpos$ID==station_id]
# ddx = subset(dfpos,dfpos$ID==station_id)
# read precipitation and nash data
filepath = file.path(datadir, sprintf('%s.csv', station_id))
df <- read_summer_data(filepath, nmaxmiss = maxmiss_per_season, Nt_JJA = Nt)
prcp_years = unique(df$YEAR)
dfnash <- read_nash_values(prcp_years = prcp_years)
xnn = dfnash$XNN
ynn = dfnash$YNN
dfnash$resquad = ridgepos(xnn=xnn, ynn=ynn) # compute quadrants
# compute annual maxima statistics
print( sprintf('compute and plot annual maxima statistics for station %s', iii))
res = table_max(df, Nt=Nt, thresh = thresh)
source("nashfun.R")    # main functions for data analysis
quadplot <- plot_quadrant_stats(res, xnn, ynn, station_id, station_name, station_state)
ggsave(file.path( outplot, sprintf('example_quadrants_%s_%s.png', station_name, station_state)),
width = 6, height = 6.5, plot=quadplot)
}
warnings
warnings()
source('~/Projects/nash/nash_codes/main_nash_plot_results_2.R', echo=TRUE)
